//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ponant.Medical.Data.Shore
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    
    public interface IShoreEntities : IDisposable
    {
        DbSet<Agency> Agency { get; set; }
        DbSet<CruiseCriterionDestination> CruiseCriterionDestination { get; set; }
        DbSet<CruiseCriterionShip> CruiseCriterionShip { get; set; }
        DbSet<Document> Document { get; set; }
        DbSet<Information> Information { get; set; }
        DbSet<Language> Language { get; set; }
        DbSet<Log> Log { get; set; }
        DbSet<Lov> Lov { get; set; }
        DbSet<LovType> LovType { get; set; }
        DbSet<Reminder> Reminder { get; set; }
        DbSet<Survey> Survey { get; set; }
        DbSet<CruiseCriterion> CruiseCriterion { get; set; }
        DbSet<vCriteria> vCriteria { get; set; }
        DbSet<Booking> Booking { get; set; }
        DbSet<BookingActivity> BookingActivity { get; set; }
        DbSet<Passenger> Passenger { get; set; }
        DbSet<vSurvey> vSurvey { get; set; }
        DbSet<vCruiseShore> vCruiseShore { get; set; }
        DbSet<vCruiseBoard> vCruiseBoard { get; set; }
        DbSet<BookingCruisePassenger> BookingCruisePassenger { get; set; }
        DbSet<Cruise> Cruise { get; set; }
        DbSet<AgencyAccessRight> AgencyAccessRight { get; set; }
        DbSet<vAgencyAccessRight> vAgencyAccessRight { get; set; }
        DbSet<vPassengerBoard> vPassengerBoard { get; set; }
        DbSet<vPassengerShore> vPassengerShore { get; set; }
        DbSet<Assignment> Assignment { get; set; }
        DbSet<vAssignment> vAssignment { get; set; }
    	Database Database { get; }
    	int SaveChanges();
    }
    
    public partial class ShoreEntities : DbContext, IShoreEntities
    {
        public ShoreEntities()
            : base("name=ShoreEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Agency> Agency { get; set; }
        public virtual DbSet<CruiseCriterionDestination> CruiseCriterionDestination { get; set; }
        public virtual DbSet<CruiseCriterionShip> CruiseCriterionShip { get; set; }
        public virtual DbSet<Document> Document { get; set; }
        public virtual DbSet<Information> Information { get; set; }
        public virtual DbSet<Language> Language { get; set; }
        public virtual DbSet<Log> Log { get; set; }
        public virtual DbSet<Lov> Lov { get; set; }
        public virtual DbSet<LovType> LovType { get; set; }
        public virtual DbSet<Reminder> Reminder { get; set; }
        public virtual DbSet<Survey> Survey { get; set; }
        public virtual DbSet<CruiseCriterion> CruiseCriterion { get; set; }
        public virtual DbSet<vCriteria> vCriteria { get; set; }
        public virtual DbSet<Booking> Booking { get; set; }
        public virtual DbSet<BookingActivity> BookingActivity { get; set; }
        public virtual DbSet<Passenger> Passenger { get; set; }
        public virtual DbSet<vSurvey> vSurvey { get; set; }
        public virtual DbSet<vCruiseShore> vCruiseShore { get; set; }
        public virtual DbSet<vCruiseBoard> vCruiseBoard { get; set; }
        public virtual DbSet<BookingCruisePassenger> BookingCruisePassenger { get; set; }
        public virtual DbSet<Cruise> Cruise { get; set; }
        public virtual DbSet<AgencyAccessRight> AgencyAccessRight { get; set; }
        public virtual DbSet<vAgencyAccessRight> vAgencyAccessRight { get; set; }
        public virtual DbSet<vPassengerBoard> vPassengerBoard { get; set; }
        public virtual DbSet<vPassengerShore> vPassengerShore { get; set; }
        public virtual DbSet<Assignment> Assignment { get; set; }
        public virtual DbSet<vAssignment> vAssignment { get; set; }
    }
}
