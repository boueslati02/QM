
@model Ponant.Medical.Shore.Models.CreatePassengerDocumentViewModel

@{
    ViewBag.Title = "Add a passenger";
}

<div class="modal fade" id="modalCreate" tabindex="-1" role="dialog" aria-labelledby="modalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">@ViewBag.Title</h4>
            </div>
            <div class="modal-body">
                @using (Ajax.BeginForm("_Create", "PassengerDocument", new AjaxOptions
                {
                    HttpMethod = "POST",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "frmCreate",
                    OnSuccess = "modalNew(data, 'modalCreate', 'frmCreate')",
                    OnFailure = "modalNew(data, 'modalCreate', 'frmCreate')"
                }, new { @id = "formPassengerDocumentCreate", @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.CruiseCode, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.CruiseCode, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CruiseCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BookingCode, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.BookingCode, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BookingCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UsualName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.UsualName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.UsualName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.BirthDate, new { @class = "form-control datepickerInput", placeholder = "    /    /    " })
                            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label col-md-3">
                            @Html.LabelFor(model => model.PassengerDocumentName, htmlAttributes: new { @class = "control-label" })
                            @(!string.IsNullOrEmpty(Model.PassengerDocumentName) ? Html.Raw("<br/><span>(" + Model.PassengerDocumentName + ")</span>") : @Html.Raw(string.Empty))
                        </div>
                        <div class="col-md-9">
                            @Html.HiddenFor(model => model.PassengerDocumentName, new { data_val = "false" })
                            @Html.TextBoxFor(model => model.PassengerDocumentName, new { id = "PassengerDocument_FileData", data_val = "false", @class = "fileInput", type = "file", baseUploadUrl = "/PassengerDocument/FileUpload", accept = ".pdf, .tiff, .tif, .jpg, .jpeg, .png, .gif, .xps, .bmp", maxFileSize = "8192" })
                            @Html.ValidationMessageFor(model => model.PassengerDocumentName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="modal-footer">
                        <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancel" />
                        <input type="submit" class="btn btn-primary" value="Save" data-loading-text="Loading..." />
                    </div>
                }
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

@Scripts.Render("~/bundles/passengerDocument_bundle")
@Styles.Render("~/Content/passengerDocument_bundle")