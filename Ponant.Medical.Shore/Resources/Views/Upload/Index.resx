<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BtnSend" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="CivilityTitle" xml:space="preserve">
    <value>Dear</value>
  </data>
  <data name="FillForm" xml:space="preserve">
    <value>To complete your registration, please fill out the form below.</value>
  </data>
  <data name="RequiredFields" xml:space="preserve">
    <value>* Required fields</value>
  </data>
  <data name="RGPD" xml:space="preserve">
    <value>In accordance with the "General Data Protection Regulation" or "GDPR", the information collected in the form is recorded in a computerized file by PONANT for the strict needs of your file. The legal basis for the processing is your consent.
The data collected will be communicated to the controller of the processing, PONANT, as mentioned on this document.
The data will be kept for the conservation period necessary for the purpose of the processing and the needs of your cruise.
You may access your data, rectify them, request their deletion or exercise your right to limit the processing of your data at any time.  You may withdraw your consent to the processing of your data at any time.
To exercise these rights or if you have any questions about the processing of your data, you can contact the data protection officer at vieprivee@ponant.com, or consult our personal data protection policy on our website www.ponant.com.
PONANT takes measures in accordance with the uses and the state of the art to ensure the security and confidentiality of data in accordance with the aforementioned legislation.
Consult the cnil.fr website for more information on your rights.</value>
  </data>
  <data name="ShipPresentation" xml:space="preserve">
    <value>We will have the pleasure of welcoming you very soon aboard our ship</value>
  </data>
  <data name="AllowedFormats" xml:space="preserve">
    <value>Allowed file formats: PDF, JPG, JPEG, PNG, GIF, TIF, TIFF, BMP, XPS</value>
  </data>
  <data name="FileSize" xml:space="preserve">
    <value>Maximum file size: 8 MB</value>
  </data>
  <data name="WarningDeparture" xml:space="preserve">
    <value>The medical survey should NOT completed or submitted until maximum 3 months before your departure date.</value>
  </data>
  <data name="QmAlreadySent" xml:space="preserve">
    <value>A medical survey has already been sent. do you want to send another one?</value>
  </data>
  <data name="radioBtnCancel" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="radioBtnValid" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="MedicalSurvey" xml:space="preserve">
    <value>Medical Survey</value>
  </data>
  <data name="RelatedDocuments" xml:space="preserve">
    <value>Related Documents</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="MedicalSurveyFileRequired" xml:space="preserve">
    <value>The MedicalSurvey field is required</value>
  </data>
  <data name="ErrorRelatedDocuments" xml:space="preserve">
    <value>You must complete at least one related document</value>
  </data>
  <data name="MadeWith" xml:space="preserve">
    <value>Your booking reservation has been made with</value>
  </data>
</root>